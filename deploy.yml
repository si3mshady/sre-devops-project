name: Build and Deploy to EKS

on:
  push:
    branches:
      - main


jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Build and push Docker image to DockerHub
        run: |
          docker build -t si3mshady/joker:latest .
          echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
          docker push si3mshady/joker:latest

      - name: Update Kube Config & Deploy to EKS
        run: |
          export AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}
          export AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}
          export AWS_DEFAULT_REGION=us-east-1
          aws eks update-kubeconfig --name thecloudshepherd --region us-east-1
          kubectl apply -f deployment.yaml

      # - name: Deploy to EKS
      #   run: |
      #     kubectl apply -f deployment.yaml

      # - name: Install Helm3 and deploy Prometheus stack to EKS
      #   run: |
      #     curl https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3 | bash
      #     helm repo add prometheus-community https://prometheus-community.github.io/helm-charts
      #     helm install prometheus prometheus-community/kube-prometheus-stack -n ingress-nginx -f values.yaml
      #     kubectl get pods -n ingress-nginx


# youtube

# first step is to deploy ingress controller (helm) kubectl get svc -n ingress-nginx
# second step is deploy and and service kubectl get svc -n ingress-nginx
# update r53 create alias record to IC
# create ingress


# clean slate:
# helm uninstall ingress-nginx --namespace ingress-nginx
# helm repo remove nginx-stable
# kubectl delete -f deployment.yaml 



# Add HELM Repository
# helm repo add nginx-stable https://helm.nginx.com/stable
# helm repo update

# helm upgrade --install ingress-nginx ingress-nginx \
#              --repo https://kubernetes.github.io/ingress-nginx \
#              --namespace ingress-nginx --create-namespace

# kubectl get pods -n ingress-nginx
# kubectl get svc -n ingress-nginx


# # \\\The script is performing the following actions:
# Adding the nginx-stable repository to Helm using the command helm repo add nginx-stable https://helm.nginx.com/stable.
# Updating the Helm repositories using the command helm repo update.
# Installing or upgrading the ingress-nginx release using the command helm upgrade --install ingress-nginx ingress-nginx --repo https://kubernetes.github.io/ingress-nginx --namespace ingress-nginx --create-namespace.
# Checking the status of the pods in the ingress-nginx namespace using the command kubectl get pods -n ingress-nginx.
# The first two commands add the nginx-stable repository to Helm and update the list of available charts. The third command installs or upgrades the ingress-nginx release using the ingress-nginx chart from the https://kubernetes.github.io/ingress-nginx repository. The --create-namespace flag creates the ingress-nginx namespace if it does not already exist. The fourth command checks the status of the pods in the ingress-nginx namespace to ensure that the ingress-nginx release has been deployed successfully.
# The NGINX Ingress Controller is a popular Kubernetes Ingress controller that uses NGINX as a reverse proxy and load balancer. The helm upgrade command is used to install or upgrade the NGINX Ingress Controller using the ingress-nginx chart. The kubectl get pods command is used to check the status of the pods in the ingress-nginx namespace to ensure that the NGINX Ingress Controller has been deployed successfully.